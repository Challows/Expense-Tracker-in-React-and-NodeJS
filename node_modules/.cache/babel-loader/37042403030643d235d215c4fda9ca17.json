{"ast":null,"code":"var _jsxFileName = \"/home/charles/Desktop/REACT PROJECTS/Expenses App/Dashboard-starter/src/components/Main/OtherTabs/Transact/Transact.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './Transact.css';\nimport transactBackground from '../../../../imgs/tabs.jpg';\nimport { rows } from '../../../../Data/Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transact = () => {\n  _s();\n\n  const [Tdata, setTdata] = useState(JSON.parse(localStorage.getItem('Transactions')));\n  useEffect(() => {\n    localStorage.setItem('Transactions', JSON.stringify(Tdata)); // localStorage.setItem('personalData', JSON.stringify(personalData))\n  }, [Tdata]);\n  const [transaction, setTransaction] = useState({\n    amount: '',\n    description: '',\n    transactionId: '',\n    date: '',\n    type: ''\n  });\n  console.log(transaction);\n\n  function handleChange(event) {\n    setTransaction(prevData => {\n      return { ...prevData,\n        [event.target.name]: event.target.value\n      };\n    });\n  }\n\n  function addTransaction(event) {\n    const exactTime = new Date();\n    let transactionTime = \"\" + exactTime;\n    setTransaction(prevData => {\n      return { ...prevData,\n        type: event.target.name,\n        date: transactionTime.substring(0, 24),\n        transactionId: \"\" + new Date().getTime()\n      };\n    }); // uploadData();\n  }\n\n  function uploadData() {\n    setTdata(prevData => {\n      return [...prevData, transaction];\n    });\n    console.log(transaction);\n    setTransaction({\n      amount: '',\n      description: '',\n      transactionId: '',\n      date: '',\n      type: ''\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: `url(${transactBackground})`\n    },\n    className: \"transact-wrapper glass\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transact-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          children: \"Enter amount: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          placeholder: \"Minimum of 1 shilling\",\n          onChange: handleChange,\n          name: \"amount\",\n          value: transaction.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"narration\",\n          children: \"Narration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"enter description\",\n          onChange: handleChange,\n          name: \"description\",\n          value: transaction.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-area\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: addTransaction,\n            className: \"btn btn-add\",\n            name: \"credit\",\n            children: \"Credit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-sub\",\n            onClick: addTransaction,\n            name: \"debit\",\n            children: \"Debit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transact, \"qh5U/NT+0JHydAQuwjFqFpLhvi0=\");\n\n_c = Transact;\nexport default Transact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transact\");","map":{"version":3,"sources":["/home/charles/Desktop/REACT PROJECTS/Expenses App/Dashboard-starter/src/components/Main/OtherTabs/Transact/Transact.jsx"],"names":["useState","useEffect","transactBackground","rows","Transact","Tdata","setTdata","JSON","parse","localStorage","getItem","setItem","stringify","transaction","setTransaction","amount","description","transactionId","date","type","console","log","handleChange","event","prevData","target","name","value","addTransaction","exactTime","Date","transactionTime","substring","getTime","uploadData","background"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\nimport './Transact.css'\nimport transactBackground from '../../../../imgs/tabs.jpg'\nimport { rows } from '../../../../Data/Data'\n\nconst Transact = () => {\n  const [Tdata, setTdata] = useState(JSON.parse(localStorage.getItem('Transactions')));\n\n  useEffect(()=>{\n    localStorage.setItem('Transactions', JSON.stringify(Tdata))\n    // localStorage.setItem('personalData', JSON.stringify(personalData))\n    },[Tdata])\n\n  const [transaction, setTransaction] = useState(\n    {\n      amount: '',\n      description: '',\n      transactionId: '',\n      date: '',\n      type: ''\n    }\n  )\n\n  console.log(transaction)\n  \n  function handleChange(event) {\n    setTransaction(prevData => {\n      return {\n        ...prevData,\n        [event.target.name]: event.target.value\n      }\n    })\n  }\n\n  function addTransaction(event) {\n    const exactTime = new Date();\n    let transactionTime = \"\" + exactTime;\n    setTransaction(prevData => {\n      return {\n        ...prevData,\n        type: event.target.name,\n        date: transactionTime.substring(0, 24),\n        transactionId: \"\" + new Date().getTime()\n      }\n    })\n    // uploadData();\n  }\n\n  function uploadData() {\n    setTdata(prevData => {\n      return [\n        ...prevData,\n        transaction\n      ]\n    });\n    console.log(transaction)\n    setTransaction({\n        amount: '',\n        description: '',\n        transactionId: '',\n        date: '',\n        type: ''\n    })\n  }\n\n  return (\n    <div style={{background: `url(${transactBackground})`}} className='transact-wrapper glass'>\n      <div className=\"transact-wrapper\">\n        <div className=\"input-area\">\n          <label htmlFor=\"amount\">Enter amount: </label>\n          <input\n           type=\"number\"\n           placeholder='Minimum of 1 shilling'\n           onChange={handleChange}\n           name='amount'\n           value={transaction.amount}\n           />\n          <label htmlFor=\"narration\">Narration</label>\n          <input \n            type=\"text\"\n            placeholder='enter description'\n            onChange={handleChange}\n            name='description'\n            value={transaction.description}\n          />\n          <div className=\"button-area\">\n            <button \n              onClick={addTransaction} \n              className=\"btn btn-add\" \n              name='credit'\n              >\n              Credit\n              </button>\n            \n            <button \n              className=\"btn btn-sub\" \n              onClick={addTransaction}\n              name='debit'\n              >\n              Debit\n              </button>\n          </div>\n        </div>\n      </div>\n    </div> \n  )\n}\n\nexport default Transact"]},"metadata":{},"sourceType":"module"}