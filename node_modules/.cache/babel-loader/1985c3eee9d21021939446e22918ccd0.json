{"ast":null,"code":"var _jsxFileName = \"/home/charles/Desktop/REACT PROJECTS/Expenses App/Dashboard-starter/src/components/Main/OtherTabs/Transact/Transact.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './Transact.css';\nimport transactBackground from '../../../../imgs/tabs.jpg';\nimport { rows } from '../../../../Data/Data';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Transact = () => {\n  _s();\n\n  const [Tdata, setTdata] = useState(JSON.parse(localStorage.getItem('Transactions')));\n  const [updated, setUpdated] = useState(false);\n  useEffect(() => {\n    localStorage.setItem('Transactions', JSON.stringify(Tdata));\n  }, [Tdata]);\n  const [transaction, setTransaction] = useState({\n    amount: '',\n    description: '',\n    transactionId: '',\n    date: '',\n    type: ''\n  }); // console.log(transaction)\n\n  function handleChange(event) {\n    setTransaction(prevData => {\n      return { ...prevData,\n        [event.target.name]: event.target.value\n      };\n    });\n  }\n\n  function addTransaction(event) {\n    const exactTime = new Date();\n    let transactionTime = \"\" + exactTime;\n    setTransaction(prevData => {\n      return { ...prevData,\n        type: event.target.name,\n        date: transactionTime.substring(0, 24),\n        transactionId: \"\" + new Date().getTime()\n      };\n    });\n    setUpdated(true);\n  }\n\n  if (updated) {\n    setTdata(prevData => {\n      return [transaction, ...prevData];\n    });\n    setTransaction({\n      amount: '',\n      description: '',\n      transactionId: '',\n      date: '',\n      type: ''\n    });\n    setUpdated(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      background: `url(${transactBackground})`\n    },\n    className: \"transact-wrapper glass\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"transact-cover\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-area glass\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"amount\",\n          className: \"title-bold input-label\",\n          children: \"Enter amount: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"amount-field\",\n          placeholder: \"Minimum of 1 shilling\",\n          onChange: handleChange,\n          name: \"amount\",\n          value: transaction.amount\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"narration\",\n          className: \"title-bold input-label\",\n          children: \"Enter description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"narration\",\n          placeholder: \"Narration\",\n          onChange: handleChange,\n          name: \"description\",\n          value: transaction.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-area glass\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: addTransaction,\n          className: \"btn btn-add\",\n          name: \"credit\",\n          children: \"Credit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-sub\",\n          onClick: addTransaction,\n          name: \"debit\",\n          children: \"Debit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Transact, \"91fXiMEfB9q+SYwUKDiJyRfvLCA=\");\n\n_c = Transact;\nexport default Transact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Transact\");","map":{"version":3,"sources":["/home/charles/Desktop/REACT PROJECTS/Expenses App/Dashboard-starter/src/components/Main/OtherTabs/Transact/Transact.jsx"],"names":["useState","useEffect","transactBackground","rows","Transact","Tdata","setTdata","JSON","parse","localStorage","getItem","updated","setUpdated","setItem","stringify","transaction","setTransaction","amount","description","transactionId","date","type","handleChange","event","prevData","target","name","value","addTransaction","exactTime","Date","transactionTime","substring","getTime","background"],"mappings":"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","sourcesContent":["import {useState, useEffect} from 'react'\nimport './Transact.css'\nimport transactBackground from '../../../../imgs/tabs.jpg'\nimport { rows } from '../../../../Data/Data'\n\nconst Transact = () => {\n  const [Tdata, setTdata] = useState(JSON.parse(localStorage.getItem('Transactions')));\n  const [updated, setUpdated]=useState(false);\n\n  useEffect(()=>{\n    localStorage.setItem('Transactions', JSON.stringify(Tdata))\n    },[Tdata])\n\n  const [transaction, setTransaction] = useState(\n    {\n      amount: '',\n      description: '',\n      transactionId: '',\n      date: '',\n      type: ''\n    }\n  )\n\n  // console.log(transaction)\n  \n  function handleChange(event) {\n    setTransaction(prevData => {\n      return {\n        ...prevData,\n        [event.target.name]: event.target.value\n      }\n    })\n  }\n\n  function addTransaction(event) {\n    const exactTime = new Date();\n    let transactionTime = \"\" + exactTime;\n    setTransaction(prevData => {\n      return {\n        ...prevData,\n        type: event.target.name,\n        date: transactionTime.substring(0, 24),\n        transactionId: \"\" + new Date().getTime()\n      }\n    })\n    setUpdated(true)\n  }\n\n  if (updated) {\n    setTdata(prevData => {\n      return [\n        transaction,\n        ...prevData\n      ]\n    });\n    setTransaction({\n        amount: '',\n        description: '',\n        transactionId: '',\n        date: '',\n        type: ''\n    })\n    \n    setUpdated(false)\n  }\n\n  return (\n    <div style={{background: `url(${transactBackground})`}} className='transact-wrapper glass'>\n      <div className=\"transact-cover\">\n        <div className=\"input-area glass\">\n          <label htmlFor=\"amount\" className='title-bold input-label'>Enter amount: </label>\n          <input\n           type=\"number\"\n           className='amount-field'\n           placeholder='Minimum of 1 shilling'\n           onChange={handleChange}\n           name='amount'\n           value={transaction.amount}\n           />\n          <label htmlFor=\"narration\" className='title-bold input-label'>Enter description: </label>\n          <input \n            type=\"text\"\n            className='narration'\n            placeholder='Narration'\n            onChange={handleChange}\n            name='description'\n            value={transaction.description}\n          />\n        </div>\n        <div className=\"button-area glass\">\n            <button \n              onClick={addTransaction} \n              className=\"btn btn-add\" \n              name='credit'\n              >\n              Credit\n              </button>\n            \n            <button \n              className=\"btn btn-sub\" \n              onClick={addTransaction}\n              name='debit'\n              >\n              Debit\n              </button>\n          </div>\n      </div>\n    </div> \n  )\n}\n\nexport default Transact"]},"metadata":{},"sourceType":"module"}